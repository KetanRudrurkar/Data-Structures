# Definition for singly-linked list.
# class ListNode:
#     def __init__(self, x):
#         self.val = x
#         self.next = None

class Solution:
    def removeNthFromEnd(self, head: ListNode, n: int) -> ListNode:
# Solution in two pass first find lenght and then subtract and remove        
        dummy=ListNode(-1)
        dummy.next=head
        length=0
        first=head
        while first:
            length+=1
            first=first.next
        count=0
        remove=length-n
        print(length)
        print(remove)
        first=dummy
        for i in range(length):
            count+=1
            if count==remove+1:
                first.next=first.next.next
            else:
                first=first.next
        return dummy.next
                
        
# Solution in one pass..keep first and second n nodes apart and then move both together
        # dummy=ListNode(-1)
        # dummy.next=head
        # first=second=dummy
        # for i in range(1,n+2):
        #     first=first.next
        # while first!=None:
        #     first=first.next
        #     second=second.next
        # second.next=second.next.next
        # return dummy.next
